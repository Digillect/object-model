<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <CompileDependsOn>$(CompileDependsOn);CheckForCodeContracts</CompileDependsOn>
  </PropertyGroup>

  <Target Name="CheckForCodeContracts" Condition=" '$(CodeContractsImported)' != 'true' ">
    <Error Text="Project requires Code Contracts http://research.microsoft.com/en-us/projects/contracts/" />
  </Target>

  <!--============================================================================
      Copy reference's Contract Reference Assembles that are marked as "CopyLocal"
      ============================================================================-->
  <Target Name="CopyReferenceCodeContractReferenceAssemblies"
          Condition="'@(ReferenceCopyLocalPaths)' != ''"
          AfterTargets="CodeContractReferenceAssembly">
    <ItemGroup>
      <CodeContractsReferenceAssembliesFiles Include="@(ReferenceCopyLocalPaths->'%(RootDir)%(Directory)CodeContracts\%(Filename).Contracts%(Extension)')" />
      <CodeContractsReferenceAssembliesCopiedFiles />
    </ItemGroup>

    <Copy SourceFiles="@(CodeContractsReferenceAssembliesFiles)"
          DestinationFolder="$(OutDir)CodeContracts"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          Condition="'$(UseCommonOutputDirectory)' != 'true' And Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')">
      <Output TaskParameter="CopiedFiles" ItemName="CodeContractsReferenceAssembliesCopiedFiles" />
    </Copy>

    <ItemGroup>
      <FileWrites Include="@(CodeContractsReferenceAssembliesCopiedFiles)" />
    </ItemGroup>
  </Target>

  <!--
    ===================================================================================================================
    These targets support packaging Code Contracts via NuProj project system.
    Just register their names within the PackageOutputGroups property or ProjectReference.PackageOutputGroups metadata.
    ===================================================================================================================
    -->
  <Target Name="CodeContractsReferenceAssembliesOutputGroup"
          Returns="@(CodeContractsReferenceAssembliesOutputGroupOutput)">
    <ItemGroup>
      <CodeContractsReferenceAssembliesOutputGroupOutput Include="@(ContractReferenceAssemblies->'%(FullPath)')">
        <TargetPath>$(CodeContractsContractSubDir)%(Filename)%(Extension)</TargetPath>
      </CodeContractsReferenceAssembliesOutputGroupOutput>
      <CodeContractsReferenceAssembliesOutputGroupOutput Include="@(ContractDummyReferenceAssembly)">
        <TargetPath>$(CodeContractsContractSubDir)%(Filename)%(Extension)</TargetPath>
      </CodeContractsReferenceAssembliesOutputGroupOutput>
    </ItemGroup>
  </Target>

  <Target Name="CodeContractsDeclarativeAssembliesOutputGroup"
          Returns="@(CodeContractsDeclarativeAssembliesOutputGroupOutput)">
    <PropertyGroup>
      <_CodeContractsDeclSubDir Condition="HasTrailingSlash('$(CodeContractsDeclDir)')">$([System.IO.Path]::GetFileName($([System.IO.Path]::GetDirectoryName('$(CodeContractsDeclDir)'))))\</_CodeContractsDeclSubDir>
      <_CodeContractsDeclSubDir Condition="!HasTrailingSlash('$(CodeContractsDeclDir)')">$([System.IO.Path]::GetFileName('$(CodeContractsDeclDir)'))\</_CodeContractsDeclSubDir>
    </PropertyGroup>
    <ItemGroup>
      <CodeContractsDeclarativeAssembliesOutputGroupOutput Include="@(ContractDeclarativeAssemblies->'%(FullPath)')">
        <TargetPath>$(_CodeContractsDeclSubDir)%(Filename)%(Extension)</TargetPath>
      </CodeContractsDeclarativeAssembliesOutputGroupOutput>
    </ItemGroup>
  </Target>
</Project>